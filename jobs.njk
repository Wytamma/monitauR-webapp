{% extends "_includes/default.njk" %}

{% block title %}Jobs{% endblock %}

{% block content %}
<div class="bg-grey-100 px-3 font-sans leading-normal tracking-normal">
  <div class="container pt-8 mx-auto" x-data="loadJobs()" x-init="fetchJobs()">
      <input
        x-ref="searchField"
        x-model="search"
        x-on:keydown.window.prevent.slash="$refs.searchField.focus()"
        placeholder="Search for a job..."
        type="search"
        class="block w-full bg-gray-200 focus:outline-none focus:bg-white focus:shadow text-gray-700 font-bold rounded-lg px-4 py-3"
      />
      <div class="mt-4 grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4">
        <template x-for="item in filteredJobs" :key="item">
          <div
            class="flex items-center shadow hover:bg-indigo-100 hover:shadow-lg hover:rounded transition duration-150 ease-in-out transform hover:scale-105 p-3"
          >
            <div
              class="flex items-center w-10 h-10 text-2xl bg-red-500 rounded-full mr-4 justify-center"
            >
            <p
            class="text-white leading-none"
            x-text="item.id"
          ></p>
            </div>
            <div class="text-sm">
              <p
                class="text-gray-900 leading-none"
                x-text="item.name"
              ></p>
              <p
                class="text-gray-600"
                x-text="item.status"
              ></p>
            </div>
          </div>
        </template>
      </div>
    </div>
  </div>
    <script>
      function loadJobs() {
        return {
          search: "",
          myForData: [],
          isLoading: false,
          fetchJobs() {
            console.log('here');
            this.isLoading = true;
            fetch('https://monitaur-api.herokuapp.com/jobs')
              .then(res => res.json())
              .then(data => {
                this.isLoading = false;
                this.myForData = data.reverse();
              });
          },
          get filteredJobs() {
            if (this.search === "") {
              return this.myForData;
            }
            return this.myForData.filter((item) => {
              return item.name
                .toLowerCase()
                .includes(this.search.toLowerCase());
            });
          },
        };
      }
    </script>
{% endblock %}