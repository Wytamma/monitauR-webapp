{% extends "_includes/default.njk" %}

{% block title %}Jobs{% endblock %}

{% block content %}
<header class="py-4 px-6 absolute top-0 left-0 right-0 z-10">
    <div class="container mx-auto">
      <div class="flex items-center">
        <div class="flex-1">
          <a href="{{ '/' | url }}">
            <div class="flex">
              <img src="{{ '/images/logo.svg' | url }}" class="h-6 mr-2">
              <span class="h-6 font-semibold">monitauR</span>
            </div>
          </a>
        </div>
        <button class="text-secondary lg:hidden">
          <svg class="current-fill h-6 w-6" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
             viewBox="-49 141 512 512" style="enable-background:new -49 141 512 512;" xml:space="preserve">
            <g>
              <g>
                <path d="M413,422H1c-13.807,0-25-11.193-25-25s11.193-25,25-25h412c13.807,0,25,11.193,25,25S426.807,422,413,422z"/>
              </g>
              <g>
                <path d="M413,562H1c-13.807,0-25-11.193-25-25s11.193-25,25-25h412c13.807,0,25,11.193,25,25S426.807,562,413,562z"/>
              </g>
              <g>
                <path d="M413,282H1c-13.807,0-25-11.193-25-25s11.193-25,25-25h412c13.807,0,25,11.193,25,25S426.807,282,413,282z"/>
              </g>
            </g>
          </svg>

        </button>
        <nav class="hidden lg:flex items-center">
          <a href="{{'/' | url }}" class="px-6 py-3 font-bold uppercase text-secondary hover:text-primary">Home</a>
          <a href="{{'/' | url }}#about" class="px-6 py-3 font-bold uppercase text-secondary hover:text-primary">About</a>
          <a href="{{'/jobs' | url }}" class="px-6 py-3 font-bold uppercase border-b-2 border-primary text-primary">Jobs</a>
        </nav>
      </div>
    </div>
  </header>
<div class="bg-grey-100 px-3 pt-16 font-sans leading-normal tracking-normal"  x-data="loadJobs()" x-init="fetchJobs()" >

  <div class="container pt-8 mx-auto"  >
      <input
        x-ref="searchField"
        x-model="search"
        x-on:keydown.window.prevent.slash="$refs.searchField.focus()"
        placeholder="Search for a job..."
        type="search"
        class="block w-full bg-gray-200 focus:outline-none focus:bg-white focus:shadow text-gray-700 font-bold rounded-lg px-4 py-3"
      />
      <div class="mt-4 grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4">
        <template x-for="item in filteredJobs" :key="item">
          <div
            class="flex items-center shadow hover:bg-indigo-100 hover:shadow-lg hover:rounded transition duration-150 ease-in-out transform hover:scale-105 p-3"
            @click="openModal(item)"
          >
            <div
              class="flex items-center w-10 h-10 text-2xl bg-red-500 rounded-full mr-4 justify-center"
            >
            <p
            class="text-white leading-none"
            x-text="item.id"
          ></p>
            </div>
            <div class="text-sm">
              <p
                class="text-gray-900 leading-none"
                x-text="item.name"
              ></p>
              <p
                class="text-gray-600"
                x-text="item.status"
              ></p>
            </div>
          </div>
        </template>
      </div>
    </div>
    <!--Overlay-->
    <template x-if="showModal" >
      <div class="overflow-auto" style="background-color: rgba(0,0,0,0.5)" :class="{ 'fixed z-1 w-full h-full top-0 left-0 flex items-center justify-center': showModal }">
			<!--Dialog-->
			<div class="bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg py-4 text-left px-6" @click.away="closeModal" x-on:keydown.escape="closeModal">

				<!--Title-->
				<div class="flex justify-between items-center pb-3">
          <div class="flex items-center justify-center">
            <div
                class="flex items-center justify-center w-10 h-10 text-2xl bg-red-500 rounded-full mr-4 "
              >
              <p
              class="text-white leading-none"
              x-text="currentJob.id"
            ></p>
              </div>
              <div class="text-lg font-semibold">
                <p
                  class="text-gray-900 leading-none"
                  x-text="currentJob.name"
                ></p>
              </div>
          </div>
					<div class="cursor-pointer z-50" @click="closeModal">
						<svg class="fill-current text-black" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
							<path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
						</svg>
					</div>
				</div>

        <!-- content -->
        
        <div class="relative mt-4">
          <div class="border-r-2 border-gray-500 absolute h-full top-0 z-0" style="left: 15px"></div>
          <ul class="list-none m-0 p-0">
          <li class="mb-2" x-show="currentJob.status == 'finished'">
            <div class="flex items-center">
              <div class="bg-green-600 rounded-full h-8 w-8 flex items-center justify-center z-50 text-white">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" stroke="currentColor" fill="none">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <div class="flex-1 ml-4 font-medium">Finished</div>
            </div>
            <div class="ml-12 text-sm text-gray-600" x-text="currentJob.updated"></div>
          </li>
          <li class="mb-2" x-show="currentJob.status == 'error'">
            <div class="flex items-center">
              <div class="bg-red-500 rounded-full h-8 w-8 flex items-center justify-center z-50 text-white">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </div>
              <div class="flex-1 ml-4 font-medium">Error</div>
            </div>
            <div class="ml-12 -mt-1 text-sm" x-text="currentJob.error"></div>
            <div class="ml-12 text-sm text-gray-600" x-text="currentJob.updated"></div>
          </li>
          <li class="mb-2" x-show="currentJob.status == 'running'">
            <div class="flex items-center">
              <div class="bg-blue-500 rounded-full h-8 w-8 flex items-center justify-center z-50 text-white">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="w-4 h-4"  viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5"  d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
              </div>
              <div class="flex-1 ml-4 font-medium">Running</div>
            </div>
            <div class="ml-12 text-sm text-gray-600" x-text="currentJob.updated"></div>
          </li>
          <template x-for="step in steps" :key="step">
            <li class="mb-2">
              <div class="flex items-center">
                <div class="bg-gray-500 rounded-full h-8 w-8 flex items-center justify-center z-50"></div>
                <div class="flex-1 ml-4 font-medium" x-text="step.msg"></div>
              </div>
              <div x-text="step.updated" class="ml-12 text-sm text-gray-600">
              </div>
            </li>
          </template>
          </ul>
        </div>
      
				<!--Footer-->
				<div class="flex justify-end pt-2">
				
				</div>


			</div>
      <!--/Dialog -->
    </div>
		</template><!-- /Overlay -->

</div>
    <script>
      function loadJobs() {
        return {
          search: "",
          myForData: [],
          showModal: false,
          isLoading: false,
          currentJob: null,
          steps: [],
          openModal (job) {
            this.currentJob = job
            this.showModal = true
            this.fetchSteps()
          },
          closeModal () {
            this.showModal = false
            this.currentJob = null
            this.steps = []
          }, 
          fetchSteps() {
            this.isLoadingSteps = true;
            fetch(`https://monitaur-api.herokuapp.com/steps?job_id=${this.currentJob.id}`)
              .then(res => res.json())
              .then(data => {
                this.isLoadingSteps = false;
                this.steps = data.reverse();
                console.log(data);
              });
          },
          fetchJobs() {
            this.isLoading = true;
            fetch('https://monitaur-api.herokuapp.com/jobs')
              .then(res => res.json())
              .then(data => {
                this.isLoading = false;
                this.myForData = data.reverse();
              });
          },
          get filteredJobs() {
            if (this.search === "") {
              return this.myForData;
            }
            return this.myForData.filter((item) => {
              return item.name
                .toLowerCase()
                .includes(this.search.toLowerCase());
            });
          },
        };
      }
    </script>
{% endblock %}